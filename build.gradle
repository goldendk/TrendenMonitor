import javax.annotation.Generated

buildscript {    // Configuration for building
    repositories {
        jcenter()    // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.3'
    }
}


apply plugin: 'java'                              // standard Java tasks
apply plugin: 'war'// standard Web Archive plugin
apply plugin: 'idea'
apply plugin: 'com.bmuschko.cargo'

ext.jerseyVersion ="2.14"

repositories {
    jcenter()
    mavenCentral()
}



dependencies {

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'

//    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
//    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.10.0'

    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'

    //mongodb
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.6.3'


    //Apache configurations
    compile group: 'org.apache.commons', name: 'commons-configuration2', version: '2.1.1'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'

    //google auth
    // https://mvnrepository.com/artifact/com.google.api-client/google-api-client
    compile( 'com.google.api-client:google-api-client-servlet:1.23.0'){
        exclude( group: 'javax.servlet')
    }

    compile group: 'org.glassfish.jersey.core', name: 'jersey-common', version: "$jerseyVersion"
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: "$jerseyVersion"
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: "$jerseyVersion"
   //  compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: "$jerseyVersion"

    // testCompile group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: "$jerseyVersion"
    //testCompile group: 'org.glassfish.jersey.test-framework.providers', name : 'jersey-test-framework-provider-grizzly2', version: "$jerseyVersion"
    //compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    //CDI: Weld
    // https://mvnrepository.com/artifact/org.jboss.weld.servlet/weld-servlet
    // https://mvnrepository.com/artifact/org.jboss.weld.servlet/weld-servlet
    compile (group: 'org.jboss.weld.servlet', name: 'weld-servlet', version: '2.4.7.Final'){
    exclude(group: 'javax.servlet')
    }

    //CDI bridge hk2 -> weld
    compile 'org.glassfish.jersey.containers.glassfish:jersey-gf-cdi:2.14'
     compile group: 'org.glassfish.jersey.containers.glassfish', name: 'jersey-gf-cdi-ban-custom-hk2-binding', version: '2.9'
    compile group: 'javax.transaction', name: 'javax.transaction-api', version: '1.2'

    compile 'io.swagger:swagger-jersey2-jaxrs:1.5.0'

    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'

    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.15.0'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'junit', name: 'junit', version: '4.12'

}

group = 'org.goldenworkshop2'   // Generated output GroupId
version = '1.0-SNAPSHOT'          // Version in generated output

sourceCompatibility = 1.8  // App Engine Standard uses Java 7
targetCompatibility = 1.8  // App Engine Standard uses Java 7
// [END gradle]

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
task exploded(type: Sync){
    into "$buildDir/exploded"
    with war
}
war{
    archiveName = 'ROOT.war'
    into(""){
        from{
            "frontend/trenden/build"
        }
    }
}
tasks.war.dependsOn(":frontend/trenden:buildReact")

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}
task printDependencyToFile(type: DependencyReportTask){
    outputFile = project.file("dependencies.txt")
}
task deps(type:DependencyReportTask){
    outputFile = project.file("deps.txt")
    configuration "runtime"
}

/**
 * Remote deployment of artifact to Tomcat server.
 */
cargo {
    containerId = 'tomcat8x'
    port = 8080
    deployable {
        context = '/'
    }
    remote {
        hostname = 'kjvj-droplet'
        username = 'admin'
        password = 'password'
    }
}

tasks.cargoDeployRemote.dependsOn(tasks.war)
tasks.cargoRedeployRemote.dependsOn(tasks.war)